 STEP:
The idea is to create a map that will be mp of string and vector<string> 
first we traverse from the start of the string when we counter our word we will send that word to genrate like ex
if our given word is eat it will genrate aet using genrate function and we will add put that aet into the map because if we found again aet then it is in the group of eat 











string genrate(string word){
        int freq[26] = {0};
        for(char &ch : word){
            freq[ch - 'a']++;
        }

        string new_word = "";
        for(int i = 0; i<26; i++){
           int frq = freq[i];
           if(frq > 0){
            new_word += string(frq, i+'a');
           }
        }
        return new_word;
    }
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        int n = strs.size();
        unordered_map<string,vector<string>>mp;
        vector<vector<string>>ans;
        string res ="";

        for(int i = 0; i<n; i++){
            string word = strs[i];
            string new_word = genrate(word);
            mp[new_word].push_back(word);     //Here we can use push function for the map because map is build using vector<string>
        }
        for(auto &it : mp){
            ans.push_back(it.second);
        }
        return ans;
    }
