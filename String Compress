class Solution {
public:
    int compress(vector<char>& chars) {
        int n = chars.size();

        int i = 0;
        int idx = 0;
        while(i<n){
            char curr_char = chars[i];
            int count = 0;
            while(i < n && curr_char == chars[i]){   //if the next character same as current the increment the count
                count++;
                i++;
            }

            chars[idx] = curr_char;                //insert the current character as the index and increment the index for the count
            idx++;
            if(count > 1){                        //Only add into the index if the count is 1 because for chars [a,b] compression is not [a1,b1] 
                string new_str = to_string(count);  

               for(char &ch : new_str){
                 chars[idx] = ch;
                 idx++;
               }
            }
        }
        return idx;
    }
};
